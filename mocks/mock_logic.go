// Code generated by MockGen. DO NOT EDIT.
// Source: logic/logic.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLogic is a mock of Logic interface
type MockLogic struct {
	ctrl     *gomock.Controller
	recorder *MockLogicMockRecorder
}

// MockLogicMockRecorder is the mock recorder for MockLogic
type MockLogicMockRecorder struct {
	mock *MockLogic
}

// NewMockLogic creates a new mock instance
func NewMockLogic(ctrl *gomock.Controller) *MockLogic {
	mock := &MockLogic{ctrl: ctrl}
	mock.recorder = &MockLogicMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockLogic) EXPECT() *MockLogicMockRecorder {
	return _m.recorder
}

// AddProductSKU mocks base method
func (_m *MockLogic) AddProductSKU(_param0 int, _param1 string, _param2 string, _param3 int) string {
	ret := _m.ctrl.Call(_m, "AddProductSKU", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(string)
	return ret0
}

// AddProductSKU indicates an expected call of AddProductSKU
func (_mr *MockLogicMockRecorder) AddProductSKU(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AddProductSKU", reflect.TypeOf((*MockLogic)(nil).AddProductSKU), arg0, arg1, arg2, arg3)
}

// UpdateProductQuantity mocks base method
func (_m *MockLogic) UpdateProductQuantity(_param0 int, _param1 int) string {
	ret := _m.ctrl.Call(_m, "UpdateProductQuantity", _param0, _param1)
	ret0, _ := ret[0].(string)
	return ret0
}

// UpdateProductQuantity indicates an expected call of UpdateProductQuantity
func (_mr *MockLogicMockRecorder) UpdateProductQuantity(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "UpdateProductQuantity", reflect.TypeOf((*MockLogic)(nil).UpdateProductQuantity), arg0, arg1)
}

// DeleteID mocks base method
func (_m *MockLogic) DeleteID(_param0 int) string {
	ret := _m.ctrl.Call(_m, "DeleteID", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

// DeleteID indicates an expected call of DeleteID
func (_mr *MockLogicMockRecorder) DeleteID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "DeleteID", reflect.TypeOf((*MockLogic)(nil).DeleteID), arg0)
}

// PrintAllProductInfo mocks base method
func (_m *MockLogic) PrintAllProductInfo() string {
	ret := _m.ctrl.Call(_m, "PrintAllProductInfo")
	ret0, _ := ret[0].(string)
	return ret0
}

// PrintAllProductInfo indicates an expected call of PrintAllProductInfo
func (_mr *MockLogicMockRecorder) PrintAllProductInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "PrintAllProductInfo", reflect.TypeOf((*MockLogic)(nil).PrintAllProductInfo))
}

// GetProductInfo mocks base method
func (_m *MockLogic) GetProductInfo(_param0 int) string {
	ret := _m.ctrl.Call(_m, "GetProductInfo", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetProductInfo indicates an expected call of GetProductInfo
func (_mr *MockLogicMockRecorder) GetProductInfo(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetProductInfo", reflect.TypeOf((*MockLogic)(nil).GetProductInfo), arg0)
}
